<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vagrant | YggdrasillNetwork Blog]]></title>
  <link href="http://ryoogata.github.io/blog/categories/vagrant/atom.xml" rel="self"/>
  <link href="http://ryoogata.github.io/"/>
  <updated>2015-04-08T23:09:40+09:00</updated>
  <id>http://ryoogata.github.io/</id>
  <author>
    <name><![CDATA[Ryo Ogata]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vagrant Box を Atlas で管理]]></title>
    <link href="http://ryoogata.github.io/2015/01/23/vagrant/"/>
    <updated>2015-01-23T10:12:51+09:00</updated>
    <id>http://ryoogata.github.io/2015/01/23/vagrant</id>
    <content type="html"><![CDATA[<h1>概要</h1>

<p>Vagrant Box を Atlas by HashiCorp を利用して管理するフローをまとめる。</p>

<h1>やりたいこと</h1>

<ul>
<li>Vagrant Box を一箇所で管理

<ul>
<li>test-kitchen の環境が会社と自宅にあり、それぞれ利用している Vagrant Box 異なってくる可能性があるため</li>
</ul>
</li>
<li>Vagrant Box のバージョン管理

<ul>
<li>Vagrant Box に手を加える場合があるため</li>
</ul>
</li>
</ul>


<h1>必要なもの</h1>

<ul>
<li>Atlas アカウント</li>
<li>AWS アカウント

<ul>
<li>S3 に Vagrant Box Image を保存するため</li>
</ul>
</li>
<li>作業端末

<ul>
<li>Vagrant ver1.5.0 以上</li>
</ul>
</li>
</ul>


<h1>作業フロー</h1>

<h2>ベースとなる Box の追加</h2>

<p><code>vagrant box add</code> コマンドを利用して、ベースとなる Box を作業端末に追加する。</p>

<ul>
<li>chef/centos-6.6</li>
</ul>


<pre><code>$ vagrant box add chef/centos-6.6 
==&gt; box: Loading metadata for box 'chef/centos-6.6'
    box: URL: https://vagrantcloud.com/chef/centos-6.6
This box can work with multiple providers! The providers that it
can work with are listed below. Please review the list and choose
the provider you will be working with.

1) virtualbox
2) vmware_desktop

Enter your choice: 1
==&gt; box: Adding box 'chef/centos-6.6' (v1.0.0) for provider: virtualbox
    box: Downloading: https://vagrantcloud.com/chef/boxes/centos-6.6/versions/1.0.0/providers/virtualbox.box
==&gt; box: Successfully added box 'chef/centos-6.6' (v1.0.0) for 'virtualbox'!
</code></pre>

<h2>Vagrantfile の作成</h2>

<p><code>vagrant init</code> コマンドを利用して、Vagrantfile を作成</p>

<pre><code>$ vagrant init chef/centos-6.6
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
</code></pre>

<ul>
<li>作成される Vagrantfile ( コメントアウト行は削除 )</li>
</ul>


<pre><code># -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "chef/centos-6.6"
end
</code></pre>

<h2>Vagrantfile の修正</h2>

<p>作成した Vagranfile の修正</p>

<h3>追加必須</h3>

<h4>synced_folder の disable</h4>

<ul>
<li>追加行</li>
</ul>


<pre><code>config.vm.synced_folder ".", "/vagrant", disabled: true
</code></pre>

<ul>
<li>Vagrantfile</li>
</ul>


<pre><code># -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "chef/centos-6.6"
  config.vm.synced_folder ".", "/vagrant", disabled: true
end
</code></pre>

<h3>任意で追加</h3>

<h4>Docker 環境セットアップ</h4>

<pre><code>config.vm.provision "docker" do |d| 
  d.version = 'latest'
end
</code></pre>

<h4>chef 環境セットアップ</h4>

<pre><code>config.omnibus.chef_version = :latest
</code></pre>

<h2>Vagrant Box の起動</h2>

<p><code>vagrant up</code> コマンドで起動</p>

<h2>Vagrant Box のパッケージ化</h2>

<p><code>vagrant package</code> コマンドを利用して Box のパッケージを作成</p>

<pre><code>$ vagrant package --output centos-6.6.box
WARNING: Could not load IOV methods. Check your GSSAPI C library for an update
WARNING: Could not load AEAD methods. Check your GSSAPI C library for an update
==&gt; default: Attempting graceful shutdown of VM...
==&gt; default: Clearing any previously set forwarded ports...
==&gt; default: Exporting VM...
==&gt; default: Compressing package to: /private/tmp/centos-6.6.box
</code></pre>

<h2>S3 へのアップロード</h2>

<p>S3 の任意の場所に作成したパッケージファイル ( e.g. centos-6.6.box ) をアップロード。</p>

<p>アップロード後、ファイルの <code>Everyone</code> へのパーミッションに <code>Open/Download</code> を付加する。</p>

<p>Atlas 上に登録するために、Link の URL を控えておく</p>

<pre><code>https://s3-ap-northeast-1.amazonaws.com/ryoogata.ap-northease-1.tech-dev.info/centos-6.6.box
</code></pre>

<h2>Atlas 上で新しい Box を作成 </h2>

<h3>1. Atlas にログイン後、新規 Box 追加</h3>

<p>Atlas ログイン直後の Development の Tab から create a box here. をクリックするか、下記の URL にアクセスして新規 Box 追加画面へ移る。</p>

<p><a href="https://atlas.hashicorp.com/boxes/new">https://atlas.hashicorp.com/boxes/new</a></p>

<h3>2. Create a new box</h3>

<h4>Name</h4>

<pre><code>centos-6.6
</code></pre>

<h4>Short description</h4>

<pre><code>chef/centos-6.6 ( v1.0.0 ) base customized image
</code></pre>

<h4>Description</h4>

<pre><code>chef/centos-6.6 ( v1.0.0 ) をベースに下記のアプリケーションをインストール済みイメージ

* Virtualbox Guest Additions
* Chef
* Docker
</code></pre>

<h3>3. New Box Version</h3>

<h4>Version</h4>

<pre><code>1.0.0
</code></pre>

<h4>Description</h4>

<pre><code>下記のバージョンのアプリケーションをインストール済みイメージ

* Virtualbox Guest Additions
  * 4.3.20
* Chef
  * 12.0.3
* Docker
  * 1.3.2
</code></pre>

<h3>4. New Box Provider</h3>

<h4>Provider</h4>

<pre><code>virtualbox
</code></pre>

<h4>URL</h4>

<pre><code>https://s3-ap-northeast-1.amazonaws.com/*******/centos-6.6.box
</code></pre>

<h3>5. Release version</h3>

<p><code>Release version</code> ボタンを押下し、リリースする</p>

<h1>Vagrant トラブルシュート</h1>

<h2>error: No such device</h2>

<p>vagrant up 時、下記のエラーメッセージを吐いて起動に失敗する場合がある。</p>

<pre><code>==&gt; default: Mounting shared folders...
    default: /vagrant =&gt; /private/tmp
Vagrant::Errors::LinuxMountFailed: Failed to mount folders in Linux guest. This is usually because
the "vboxsf" file system is not available. Please verify that
the guest additions are properly installed in the guest and
can work properly. The command attempted was:

mount -t vboxsf -o uid=`id -u vagrant`,gid=`getent group vagrant | cut -d: -f3` vagrant /vagrant
mount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant

The error output from the last command was:

/sbin/mount.vboxsf: mounting failed with the error: No such device
</code></pre>

<p>sync folder が正常に mount できずにエラーになる。Vagrant box に Virtualbox Guest Additions がインストールされていなかったり、Vagrant のバージョンとの乖離がありすぎると問題になるみたい。</p>

<p>Vagrant up 時に sync folder を mount しないように Vagrantfile に
<code>config.vm.synced_folder ".", "/vagrant", disabled: true</code> の記述を追加して回避。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant と Hosted Chef との連携]]></title>
    <link href="http://ryoogata.github.io/2014/10/20/vagrant-chef-server/"/>
    <updated>2014-10-20T15:35:34+09:00</updated>
    <id>http://ryoogata.github.io/2014/10/20/vagrant-chef-server</id>
    <content type="html"><![CDATA[<h1>概要</h1>

<p>Vagrant の Provisioner に Chef Client を利用し、Chef Server に Hosted Chef を利用する</p>

<h2>Vagrantfile</h2>

<pre><code>config.vm.provision "chef_client" do |chef|
  chef.chef_server_url = "https://api.opscode.com/organizations/tech-sales"
  chef.validation_client_name = "tech-sales-validator"
  chef.validation_key_path = "../../hosted-chef-repo/.chef/tech-sales-validator.pem"
  chef.environment = "setup"
  chef.node_name = "chef-test"
  chef.delete_node = true
  chef.delete_client = true
end
</code></pre>

<ul>
<li><p>chef_server_url</p>

<ul>
<li>Organizations 毎に変わる</li>
</ul>
</li>
<li><p>validation_client_name</p>

<ul>
<li>Hosted Chef Server に Node を登録する際に使用するユーザ名</li>
<li>Hosted Chef の Organization の Client で、<code>Validation Client</code> として利用する Client 名を指定する

<ul>
<li>default の <code>chef-validator</code> ではダメ</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant の Provisioner に Chef Client を利用する際に遭遇したトラブルとその解決策]]></title>
    <link href="http://ryoogata.github.io/2014/10/16/vagrant/"/>
    <updated>2014-10-16T16:41:05+09:00</updated>
    <id>http://ryoogata.github.io/2014/10/16/vagrant</id>
    <content type="html"><![CDATA[<h1>概要</h1>

<p>Vagrant の Provisioner に Chef Client を利用する際に遭遇したトラブルとその解決策</p>

<h3>内容</h3>

<p>Hosted Chef を Chef Server として利用し、下記の設定がされている状態で、vagrant destory を実行すると VM は削除されるが、Hosted Chef 上の Nodes/Clients から情報が削除されない。</p>

<pre><code>chef.chef_server_url = "https://api.opscode.com/organizations/tech-sales"
chef.validation_client_name = "tech-sales-validator"
chef.validation_key_path = "../../hosted-chef-repo/.chef/tech-sales-validator.pem"
chef.environment = "setup"
chef.node_name = "chef-test"
chef.delete_node = true
chef.delete_client = true
</code></pre>

<h3>エラーログ</h3>

<pre><code>==&gt; default: Running cleanup tasks for 'chef_client' provisioner...
==&gt; default: Deleting client "chef-test" from Chef server...
==&gt; default: Cleaning up the 'client' for Chef failed. The stdout and
==&gt; default: stderr are shown below. Vagrant will continue destroying the machine,
==&gt; default: so please clean up these resources manually.
==&gt; default: 
==&gt; default: stdout: Response: Cannot load client chef-test
==&gt; default: 
==&gt; default: 
==&gt; default: stderr: ERROR: The object you are looking for could not be found
==&gt; default: Deleting node "chef-test" from Chef server...
==&gt; default: Cleaning up the 'node' for Chef failed. The stdout and
==&gt; default: stderr are shown below. Vagrant will continue destroying the machine,
==&gt; default: so please clean up these resources manually.
==&gt; default: 
==&gt; default: stdout: Response: node 'chef-test' not found
==&gt; default: 
==&gt; default: 
==&gt; default: stderr: ERROR: The object you are looking for could not be found
</code></pre>

<h3>対応策</h3>

<p>未解決</p>

<h2>chef is not part of the bundle エラー</h2>

<h3>内容</h3>

<p>下記の設定がされている状態で、vagrant destory を実行すると VM は削除されるが、chef server 上の Nodes/Clients から情報が削除されない。</p>

<pre><code>chef.node_name = "vagrant-win7"
chef.delete_node = true
</code></pre>

<p><code>chef is not part of the bundle. Add it to Gemfile. (Gem::LoadError)</code> のエラーを吐いて処理が終了してしまう。</p>

<h3>エラーログ</h3>

<pre><code>$ vagrant destroy -f
WARNING: Could not load IOV methods. Check your GSSAPI C library for an update
WARNING: Could not load AEAD methods. Check your GSSAPI C library for an update
==&gt; default: Forcing shutdown of VM...
==&gt; default: Destroying VM and associated drives...
==&gt; default: Running cleanup tasks for 'chef_client' provisioner...
==&gt; default: Deleting client "vagrant-win7.example.local" from Chef server...
==&gt; default: Cleaning up the 'client' for Chef failed. The stdout and
==&gt; default: stderr are shown below. Vagrant will continue destroying the machine,
==&gt; default: so please clean up these resources manually.
==&gt; default: 
==&gt; default: stdout: 
==&gt; default: 
==&gt; default: stderr: /Applications/Vagrant/embedded/gems/gems/bundler-1.6.2/lib/bundler/rubygems_integration.rb:252:in `block in replace_gem': chef is not part of the bundle. Add it to Gemfile. (Gem::LoadError)
==&gt; default:    from /Users/ryo/.rvm/gems/ruby-2.0.0-p451@railstutorial_rails_4_0/bin/knife:22:in `&lt;main&gt;'
==&gt; default:    from /Users/ryo/.rvm/gems/ruby-2.0.0-p451@railstutorial_rails_4_0/bin/ruby_executable_hooks:15:in `eval'
==&gt; default:    from /Users/ryo/.rvm/gems/ruby-2.0.0-p451@railstutorial_rails_4_0/bin/ruby_executable_hooks:15:in `&lt;main&gt;'
==&gt; default: Deleting node "vagrant-win7.example.local" from Chef server...
==&gt; default: Cleaning up the 'node' for Chef failed. The stdout and
==&gt; default: stderr are shown below. Vagrant will continue destroying the machine,
==&gt; default: so please clean up these resources manually.
==&gt; default: 
==&gt; default: stdout: 
==&gt; default: 
==&gt; default: stderr: /Applications/Vagrant/embedded/gems/gems/bundler-1.6.2/lib/bundler/rubygems_integration.rb:252:in `block in replace_gem': chef is not part of the bundle. Add it to Gemfile. (Gem::LoadError)
==&gt; default:    from /Users/ryo/.rvm/gems/ruby-2.0.0-p451@railstutorial_rails_4_0/bin/knife:22:in `&lt;main&gt;'
==&gt; default:    from /Users/ryo/.rvm/gems/ruby-2.0.0-p451@railstutorial_rails_4_0/bin/ruby_executable_hooks:15:in `eval'
==&gt; default:    from /Users/ryo/.rvm/gems/ruby-2.0.0-p451@railstutorial_rails_4_0/bin/ruby_executable_hooks:15:in `&lt;main&gt;'
</code></pre>

<h3>対応策</h3>

<p>Vagrant の Version を 1.6.5 に上げる</p>

<p>Vagrant 1.6.3 だとエラーが出るが、 1.6.5 だとエラーが出ず、Chef Server 上から Nodes/Clients から情報が削除される。</p>

<h2>NameError</h2>

<h3>内容</h3>

<p>下記の設定がされている状態で、vagrant destory を実行すると VM は削除されるが、chef server 上の Nodes/Clients から情報が削除されない。</p>

<pre><code>chef.delete_node = true
</code></pre>

<p><code>uninitialized constant Berkshelf::BerkshelfError (NameError)</code> のエラーを吐いて処理が終了してしまう。</p>

<h3>エラーログ</h3>

<pre><code class="">$ vagrant destroy -f

WARNING: Could not load IOV methods. Check your GSSAPI C library for an update
WARNING: Could not load AEAD methods. Check your GSSAPI C library for an update
==&gt; default: Forcing shutdown of VM...
==&gt; default: Destroying VM and associated drives...
==&gt; default: Running cleanup tasks for 'chef_client' provisioner...
==&gt; default: Deleting client "" from Chef server...
/Users/ryo/.vagrant.d/gems/gems/vagrant-berkshelf-3.0.1/lib/berkshelf/vagrant/action/clean.rb:21:in `rescue in call': uninitialized constant Berkshelf::BerkshelfError (NameError)
</code></pre>

<h3>対応策</h3>

<p>Chef Server 上のどの Node を削除するのか指定できないので、エラーで止まるみたい。</p>

<p>Vagrantfile に下記の記述を追加して対応</p>

<pre><code>chef.node_name = "vagrant-win7"
</code></pre>
]]></content>
  </entry>
  
</feed>
