<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: kvm | YggdrasillNetwork Blog]]></title>
  <link href="http://ryoogata.github.io/blog/categories/kvm/atom.xml" rel="self"/>
  <link href="http://ryoogata.github.io/"/>
  <updated>2015-04-21T10:56:36+09:00</updated>
  <id>http://ryoogata.github.io/</id>
  <author>
    <name><![CDATA[Ryo Ogata]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[KVM Tips]]></title>
    <link href="http://ryoogata.github.io/2015/02/19/kvm/"/>
    <updated>2015-02-19T23:23:43+09:00</updated>
    <id>http://ryoogata.github.io/2015/02/19/kvm</id>
    <content type="html"><![CDATA[<h1>概要</h1>

<p>KVM 操作の際の Tips</p>

<h1>virsh コマンド</h1>

<h2>ドメイン一覧表示 ( 停止中を含む )</h2>

<pre><code># virsh list --all
</code></pre>

<h2>ドメインの起動</h2>

<pre><code># virsh start centos66
</code></pre>

<h2>ドメインの強制停止</h2>

<pre><code># virsh destroy pc2
</code></pre>

<h2>ドメインの削除</h2>

<pre><code># virsh undefine centos66
</code></pre>

<p>※ 停止中のドメインのみ実行可能</p>

<h2>ゲストのコンソールに接続</h2>

<pre><code># virsh console 5
</code></pre>

<h2>ゲストのコンソールから抜ける</h2>

<pre><code>^] 
</code></pre>

<h2>VM の設定ファイルを編集</h2>

<pre><code># virsh edit &lt;vm-name&gt;
</code></pre>

<h2>実行されている VM の設定確認</h2>

<pre><code># virsh dumpxml &lt;vm-name&gt;
</code></pre>

<h2>ホストに接続されているソケット数、コア数およびハイパースレッド数に関する情報を確認</h2>

<pre><code># virsh nodeinfo
CPU モデル:       x86_64
CPU:                 8
CPU 周波数:       1795 MHz
CPU ソケット数: 1
ソケットあたりのコア数: 4
コアあたりのスレッド数: 1
NUMA セル数:      2
メモリー容量:  65801024 KiB
</code></pre>

<h2>capabilities</h2>

<pre><code>[root@kvm1 images]# virsh capabilities
&lt;capabilities&gt;

  &lt;host&gt;
    &lt;uuid&gt;37343730-3838-434e-3734-353030384344&lt;/uuid&gt;
    &lt;cpu&gt;
      &lt;arch&gt;x86_64&lt;/arch&gt;
      &lt;model&gt;SandyBridge&lt;/model&gt;
      &lt;vendor&gt;Intel&lt;/vendor&gt;
      &lt;topology sockets='1' cores='4' threads='1'/&gt;
      &lt;feature name='invtsc'/&gt;
      &lt;feature name='erms'/&gt;
      &lt;feature name='smep'/&gt;
      &lt;feature name='fsgsbase'/&gt;
      &lt;feature name='pdpe1gb'/&gt;
      &lt;feature name='rdrand'/&gt;
      &lt;feature name='f16c'/&gt;
      &lt;feature name='osxsave'/&gt;
      &lt;feature name='dca'/&gt;
      &lt;feature name='pcid'/&gt;
      &lt;feature name='pdcm'/&gt;
      &lt;feature name='xtpr'/&gt;
      &lt;feature name='tm2'/&gt;
      &lt;feature name='est'/&gt;
      &lt;feature name='smx'/&gt;
      &lt;feature name='vmx'/&gt;
      &lt;feature name='ds_cpl'/&gt;
      &lt;feature name='monitor'/&gt;
      &lt;feature name='dtes64'/&gt;
      &lt;feature name='pbe'/&gt;
      &lt;feature name='tm'/&gt;
      &lt;feature name='ht'/&gt;
      &lt;feature name='ss'/&gt;
      &lt;feature name='acpi'/&gt;
      &lt;feature name='ds'/&gt;
      &lt;feature name='vme'/&gt;
    &lt;/cpu&gt;
    &lt;power_management&gt;
      &lt;suspend_disk/&gt;
    &lt;/power_management&gt;
    &lt;migration_features&gt;
      &lt;live/&gt;
      &lt;uri_transports&gt;
        &lt;uri_transport&gt;tcp&lt;/uri_transport&gt;
      &lt;/uri_transports&gt;
    &lt;/migration_features&gt;
    &lt;topology&gt;
      &lt;cells num='2'&gt;
        &lt;cell id='0'&gt;
          &lt;cpus num='4'&gt;
            &lt;cpu id='0' socket_id='0' core_id='0' siblings='0'/&gt;
            &lt;cpu id='1' socket_id='0' core_id='1' siblings='1'/&gt;
            &lt;cpu id='2' socket_id='0' core_id='2' siblings='2'/&gt;
            &lt;cpu id='3' socket_id='0' core_id='3' siblings='3'/&gt;
          &lt;/cpus&gt;
        &lt;/cell&gt;
        &lt;cell id='1'&gt;
          &lt;cpus num='4'&gt;
            &lt;cpu id='4' socket_id='1' core_id='0' siblings='4'/&gt;
            &lt;cpu id='5' socket_id='1' core_id='1' siblings='5'/&gt;
            &lt;cpu id='6' socket_id='1' core_id='2' siblings='6'/&gt;
            &lt;cpu id='7' socket_id='1' core_id='3' siblings='7'/&gt;
          &lt;/cpus&gt;
        &lt;/cell&gt;
      &lt;/cells&gt;
    &lt;/topology&gt;
    &lt;secmodel&gt;
      &lt;model&gt;selinux&lt;/model&gt;
      &lt;doi&gt;0&lt;/doi&gt;
    &lt;/secmodel&gt;
    &lt;secmodel&gt;
      &lt;model&gt;dac&lt;/model&gt;
      &lt;doi&gt;0&lt;/doi&gt;
    &lt;/secmodel&gt;
  &lt;/host&gt;

  &lt;guest&gt;
    &lt;os_type&gt;hvm&lt;/os_type&gt;
    &lt;arch name='i686'&gt;
      &lt;wordsize&gt;32&lt;/wordsize&gt;
      &lt;emulator&gt;/usr/libexec/qemu-kvm&lt;/emulator&gt;
      &lt;machine&gt;rhel6.6.0&lt;/machine&gt;
      &lt;machine canonical='rhel6.6.0'&gt;pc&lt;/machine&gt;
      &lt;machine&gt;rhel6.5.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.4.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.3.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.2.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.1.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.0.0&lt;/machine&gt;
      &lt;machine&gt;rhel5.5.0&lt;/machine&gt;
      &lt;machine&gt;rhel5.4.4&lt;/machine&gt;
      &lt;machine&gt;rhel5.4.0&lt;/machine&gt;
      &lt;domain type='qemu'&gt;
      &lt;/domain&gt;
      &lt;domain type='kvm'&gt;
        &lt;emulator&gt;/usr/libexec/qemu-kvm&lt;/emulator&gt;
      &lt;/domain&gt;
    &lt;/arch&gt;
    &lt;features&gt;
      &lt;cpuselection/&gt;
      &lt;deviceboot/&gt;
      &lt;acpi default='on' toggle='yes'/&gt;
      &lt;apic default='on' toggle='no'/&gt;
      &lt;pae/&gt;
      &lt;nonpae/&gt;
    &lt;/features&gt;
  &lt;/guest&gt;

  &lt;guest&gt;
    &lt;os_type&gt;hvm&lt;/os_type&gt;
    &lt;arch name='x86_64'&gt;
      &lt;wordsize&gt;64&lt;/wordsize&gt;
      &lt;emulator&gt;/usr/libexec/qemu-kvm&lt;/emulator&gt;
      &lt;machine&gt;rhel6.6.0&lt;/machine&gt;
      &lt;machine canonical='rhel6.6.0'&gt;pc&lt;/machine&gt;
      &lt;machine&gt;rhel6.5.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.4.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.3.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.2.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.1.0&lt;/machine&gt;
      &lt;machine&gt;rhel6.0.0&lt;/machine&gt;
      &lt;machine&gt;rhel5.5.0&lt;/machine&gt;
      &lt;machine&gt;rhel5.4.4&lt;/machine&gt;
      &lt;machine&gt;rhel5.4.0&lt;/machine&gt;
      &lt;domain type='qemu'&gt;
      &lt;/domain&gt;
      &lt;domain type='kvm'&gt;
        &lt;emulator&gt;/usr/libexec/qemu-kvm&lt;/emulator&gt;
      &lt;/domain&gt;
    &lt;/arch&gt;
    &lt;features&gt;
      &lt;cpuselection/&gt;
      &lt;deviceboot/&gt;
      &lt;acpi default='on' toggle='yes'/&gt;
      &lt;apic default='on' toggle='no'/&gt;
    &lt;/features&gt;
  &lt;/guest&gt;

&lt;/capabilities&gt;
</code></pre>

<h1>VM 名のリネーム</h1>

<pre><code># virsh edit nat01
</code></pre>

<p>下記の行を編集</p>

<pre><code>&lt;name&gt;nat01&lt;/name&gt;
</code></pre>

<p>下記の行を削除
<code>
&lt;uuid&gt;1f85892f-195a-d19b-3a7a-99457b558ab8&lt;/uuid&gt;
</code></p>

<h1>NIC の追加</h1>

<h2>Linux Bridge 環境</h2>

<p>VM が起動している状態で実行可能</p>

<pre><code># virsh attach-interface --type bridge --source br0 --model e1000 nat
</code></pre>

<h2>openvswitch 環境</h2>

<p><code>virsh attach-interface</code> コマンドではエラーになるため、VM が停止した状態で設定ファイルに下記のような記述を追加</p>

<pre><code>&lt;interface type='bridge'&gt;
  &lt;source bridge='br3'/&gt;
  &lt;virtualport type='openvswitch'/&gt;
&lt;/interface&gt;
</code></pre>

<p><code>virsh edit</code> コマンド実行後、自動的に下記のような設定になっている</p>

<pre><code>&lt;interface type='bridge'&gt;
  &lt;mac address='52:54:00:90:9a:9e'/&gt;
  &lt;source bridge='br3'/&gt;
  &lt;virtualport type='openvswitch'&gt;
    &lt;parameters interfaceid='a52f60f2-2ef5-3eb5-9a89-cb0f13e3aa40'/&gt;
  &lt;/virtualport&gt;
  &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x08' function='0x0'/&gt;
&lt;/interface&gt;
</code></pre>

<p><code>mac address</code>, <code>parameters</code>, <code>address</code> は自動的に設定してくれる</p>

<p>以下は <code>virsh attach-interface</code> コマンド実行時のエラーメッセージ</p>

<pre><code># virsh attach-interface --type bridge --source br1 --model e1000 fumi-1
エラー: インターフェースを接続できませんでした
エラー: Unable to add bridge br1 port vnet2: Operation not supported
</code></pre>

<h1>VM に Disk の追加</h1>

<p>VM が Down している状態で実行する</p>

<h2>1. Disk Image の作成</h2>

<pre><code># cd /var/lib/libvirt/images
# qemu-img create -f qcow2 disk_Maria-1.img 40G
</code></pre>

<h2>2. 設定の追加</h2>

<p>virsh edit コマンドを利用して設定を追記</p>

<pre><code># virsh edit Maria-1
</code></pre>

<ul>
<li>追加分 Config</li>
</ul>


<pre><code>&lt;disk type='file' device='disk'&gt;
  &lt;driver name='qemu' type='qcow2' cache='none'/&gt;
  &lt;source file='/var/lib/libvirt/images/disk_Maria-1.img'/&gt;
  &lt;target dev='vdb' bus='virtio'/&gt;
&lt;/disk&gt;
</code></pre>

<h1>VM のクローン</h1>

<h2>1. クローンコマンドの実行</h2>

<p>VM が Down している状態で実行</p>

<pre><code># virt-clone --original cent_base --name Maria-1 --file /var/lib/libvirt/images/Maria-1.img
</code></pre>

<h2>2. MAC Address のメモ</h2>

<pre><code># virsh dumpxml Maria-1 | grep mac
    &lt;type arch='x86_64' machine='rhel6.6.0'&gt;hvm&lt;/type&gt;
      &lt;mac address='52:54:00:64:df:4f'/&gt;
</code></pre>

<h2>3. vnc port の編集</h2>

<p>既存の VM とかぶらない VNC の Port 番号に変更</p>

<pre><code># virsh edit Maria-1
</code></pre>

<pre><code>    &lt;graphics type='vnc' port='20001' autoport='no' listen='0.0.0.0'&gt;
      &lt;listen type='address' address='0.0.0.0'/&gt;
    &lt;/graphics&gt;
</code></pre>

<h2>4. VM の起動</h2>

<pre><code>virsh start Maria-1
</code></pre>

<h2>5. 70-persistent-net.rules の編集</h2>

<p>ここから VNC 経由で接続して作業</p>

<pre><code>/etc/udev/rules.d/70-persistent-net.rules
</code></pre>

<h2>6. ifcfg-eth0 の編集</h2>

<pre><code>UUID
HWADDR
BOOTPROTO=dchp

BOOTPROTO=none
IPADDR=211.14.1.11
NETMASK=255.255.255.192
</code></pre>

<h2>7. VM の再起動</h2>

<pre><code># shutdown -r now
</code></pre>

<h2>8. Interface のアドレス設定</h2>

<p>手動で IP アドレスを付与</p>

<pre><code># ifconfig eth0 inet 172.25.255.131/24
</code></pre>

<h2>9. resolv.conf の編集</h2>

<h1>VNC 設定</h1>

<pre><code>&lt;graphics type='vnc' port='21144' autoport='no' listen='0.0.0.0' keymap='ja' passwd='Password'&gt;
</code></pre>

<h1>参照 URL</h1>

<ul>
<li><a href="http://www.agilegroup.co.jp/technote/kvm-guest-clone.html">KVMのクローンを利用して新規仮想マシンを作成する</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KVM VM に OS をインストール]]></title>
    <link href="http://ryoogata.github.io/2015/02/06/wakame-vdc-kvm/"/>
    <updated>2015-02-06T23:02:07+09:00</updated>
    <id>http://ryoogata.github.io/2015/02/06/wakame-vdc-kvm</id>
    <content type="html"><![CDATA[<h1>概要</h1>

<p>KVM VM に OS をインストールする手法のまとめ</p>

<h1>CentOS 6.6 の場合</h1>

<h2>仮想HDDイメージファイルの作成</h2>

<pre><code># dd if=/dev/zero of=/var/lib/libvirt/images/centos66.img bs=1M count=10240
</code></pre>

<h2>インストール開始</h2>

<p>VNC経由もしくはテキストモードにてインストールを実施する</p>

<h3>VNC 経由の場合</h3>

<p>VNC 経由で作業を実施するために、<code>virt-viewr</code> を事前にインストールしておく</p>

<pre><code># yum install virt-viewer
</code></pre>

<p>下記のコマンドを実行し、インストールを実施</p>

<pre><code># virt-install \
 --virt-type=kvm \
 --hvm \
 --connect qemu:///system \
 --vcpus 1 \
 --ram=1024 \
 --os-type=linux \
 --os-variant=rhel6 \
 --network bridge=br0 \
 --vnc --vncport=29741 --vnclisten=0.0.0.0 \
 --name centos66 \
 --disk=/var/lib/libvirt/images/centos66.img \
 --location='/var/lib/libvirt/images/CentOS-6.6-x86_64-bin-DVD1.iso' \
 --accelerate
</code></pre>

<h3>テキストモードの場合</h3>

<p>テキストモードインストールでは、GUIインストールとは異なり、パーティション等の編集メニューが出てこない。
インストール時に指定したい場合には、キックスタートを利用してインストールすればよい。</p>

<pre><code># virt-install \
 --virt-type=kvm \
 --hvm \
 --connect qemu:///system \
 --vcpus 1 \
 --ram=1024 \
 --os-type=linux \
 --os-variant=rhel6 \
 --network bridge=br0 \
 --nographics \
 --extra-args='console=tty0 console=ttyS0, 115200n8' \
 --name centos66 \
 --disk=/var/lib/libvirt/images/centos.img \
 --location='/var/lib/libvirt/images/CentOS-6.6-x86_64-bin-DVD1.iso' \
 --accelerate \
</code></pre>

<h2>ドメインの起動</h2>

<pre><code># virsh start centos66
</code></pre>

<h1>ubuntu-14.04 の場合</h1>

<p>作業途中で失敗する&hellip;</p>

<h2>仮想HDDイメージファイルの作成</h2>

<pre><code># dd if=/dev/zero of=/var/lib/libvirt/images/ubuntu.img bs=1M count=10240
</code></pre>

<h2>ISO イメージをループバックマウント</h2>

<pre><code># mount --read-only --options loop ubuntu-14.04.1-server-amd64.iso ISO
</code></pre>

<h2>インストール開始</h2>

<h3>VNC 経由の場合</h3>

<pre><code># virt-install \
 --name=TestMachine \
 --ram=2048 \
 --vcpus=1 \
 --os-variant ubuntuprecise \
 --hvm \
 --connect qemu:///system \
 --virt-type=kvm \
 --disk=/var/lib/libvirt/images/ubuntu.img,format=qcow2 \
 --network=bridge:br0 \
 --keymap=ja \
 --location /var/lib/libvirt/images/ISO/ \
 --serial pty \
 --extra-args=console=ttyS0
</code></pre>

<h1>Tips</h1>

<h2>SSH PortFoward</h2>

<pre><code># ssh -L 29741:localhost:29741 root@172.16.1.108 
</code></pre>

<h2>gzip 圧縮 ( 元ファイル残す )</h2>

<pre><code># gzip -c centos66.img &gt; 20150202_2_centos66.img.gz
</code></pre>

<h1>参照 URL</h1>

<ul>
<li><a href="http://www.maruko2.com/mw/CentOS/%E3%83%91%E3%83%BC%E3%83%86%E3%82%A3%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE_UUID_%E3%82%92%E7%A2%BA%E8%AA%8D%E3%83%BB%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95">CentOS/パーティションの UUID を確認・変更する方法</a></li>
<li><a href="http://blog.osamu.habuka.jp/blog/2014/12/03/try-to-make-wakame-vdcs-image/">Wakame-VDC のマシンイメージを作ってみる</a></li>
<li><a href="http://www.oss-d.net/virt/kvm/backup">KVMにおけるゲストOSのバックアップ/リストア </a></li>
<li><a href="https://github.com/axsh/wakame-vdc/wiki/Custom-images">Custom images</a></li>
<li><a href="http://blog.livedoor.jp/hide_system/archives/51888446.html">CentOS6.4(minimal) KVMによる仮想環境構築(テキストモード)</a></li>
<li><a href="http://fishrimper.blogspot.jp/2014/01/kvm-os-ubuntu.html">KVM ゲスト OS としてコンソールから Ubuntu をインストール </a></li>
</ul>

]]></content>
  </entry>
  
</feed>
