<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Network | YggdrasillNetwork Blog]]></title>
  <link href="http://ryoogata.github.io/blog/tags/network/atom.xml" rel="self"/>
  <link href="http://ryoogata.github.io/"/>
  <updated>2015-02-20T12:25:24+09:00</updated>
  <id>http://ryoogata.github.io/</id>
  <author>
    <name><![CDATA[Ryo Ogata]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Openvnet のインストール]]></title>
    <link href="http://ryoogata.github.io/2015/02/20/openvnet/"/>
    <updated>2015-02-20T12:11:16+09:00</updated>
    <id>http://ryoogata.github.io/2015/02/20/openvnet</id>
    <content type="html"><![CDATA[<h1>目的</h1>

<p>openvnet のインストールと簡単なオペレーションのメモ</p>

<h1>インストール</h1>

<pre><code># curl -o /etc/yum.repos.d/openvnet.repo -R https://raw.githubusercontent.com/axsh/openvnet/master/openvnet.repo

# curl -o /etc/yum.repos.d/openvnet-third-party.repo -R https://raw.githubusercontent.com/axsh/openvnet/master/openvnet-third-party.repo

# yum install -y openvnet
</code></pre>

<h2>設定ファイル</h2>

<h3>/etc/openvnet/vnmgr.conf</h3>

<pre><code>node {
  id "vnmgr"
  addr {
    protocol "tcp"
    host "127.0.0.1"
    port 9102
  }
  plugins [:vdc_vnet_plugin]
}
</code></pre>

<h3>/etc/openvnet/vna.conf</h3>

<pre><code>node {
  id "vna"
  addr {
    protocol "tcp"
    host "127.0.0.1"
    port 9103
  }
}

network {
  uuid ""
  gateway {
    address ""
  }
}
</code></pre>

<h3>webapi.conf</h3>

<pre><code>node {
  id "webapi"
  addr {
    protocol "tcp"
    host "127.0.0.1"
    port 9101
  }
}
</code></pre>

<p>vnmgr/vna/webapi が同一 Host に同居する場合は ZeroMQ の port は被らないように設定が必要</p>

<h3>common.conf</h3>

<pre><code>registry {
  adapter "redis"
  host "127.0.0.1"
  port 6379
}

db {
  adapter "mysql2"
  host "localhost"
  database "vnet"
  port 3306
  user "root"
  password ""
}
</code></pre>

<h2>初期セットアップ</h2>

<p>/opt/axsh/openvnet/vnet/README.md を参照して作業</p>

<pre><code># mysqladmin -uroot create vnet

# export PATH=/opt/axsh/openvnet/ruby/bin:$PATH

# cd /opt/axsh/openvnet/vnet
# gem install bundler
# bundle exec rake db:init
# service redis start
</code></pre>

<p>下記のくだりの作業は不要(みたい)</p>

<pre><code>Copy the upstart scripts into their proper directories

    cp /opt/axsh/openvnet/deployment/conf_files/etc/init/* /etc/init
    cp /opt/axsh/openvnet/deployment/conf_files/etc/default/* /etc/default
</code></pre>

<h2>サービスの起動</h2>

<pre><code>start vnet-vnmgr
start vnet-vna
start vnet-webapi
</code></pre>

<h2>vnctl コマンドのセットアップ</h2>

<pre><code># bundle install
Don't run Bundler as root. Bundler can ask for sudo if it is needed, and installing your bundle as root will break this application for all non-root users on
this machine.
Fetching gem metadata from http://rubygems.org/.......
Installing fuguta 1.0.2
Installing multi_json 1.8.0
Installing multi_xml 0.5.5
Installing httparty 0.11.0
Installing thor 0.18.1
Using bundler 1.7.12
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
Post-install message from httparty:
When you HTTParty, you must party hard!
</code></pre>

<h1>1 Box OpenVNet</h1>

<pre><code># curl -o /root/vnet-test-kvm.tgz -R http://dlc.openvnet.axsh.jp/tests/vnet-test-kvm.tgz
# tar xvfz ./vnet-test-kvm.tgz
# export PATH=/opt/axsh/openvnet/ruby/bin:$PATH
# cd /root/vnet-test-kvm
</code></pre>

<p>db.sh の下記記述をコメントアウト</p>

<pre><code># mysqladmin -uroot create vnet
# (cd /opt/axsh/wakame-vnet/vnet; bundle exec rake db:init)
</code></pre>

<p>ip_node1 を opvbr0 に割り当てている IP に設定</p>

<p>ip_node1=&lsquo;10.1.0.1&rsquo;</p>

<p>nw-public の一部を下記のように編集</p>

<p>&ndash;data-urlencode ipv4_network=10.1.0.0 \</p>

<pre><code># ./db.sh
</code></pre>

<h1>ovs コマンド</h1>

<pre><code># ovs-vsctl show
</code></pre>

<h1>vnctl コマンド</h1>

<pre><code># ./vnctl datapaths network show dp-1
</code></pre>

<h1>OpenVNet の設定の流れ</h1>

<ul>
<li><p>datapath の設定</p></li>
<li><p>network の設定</p></li>
<li><p>interfaces の設定</p>

<ul>
<li>owner_datapath_uuid で datapaths との紐付けが必要</li>
<li>network_uuid で networks との紐付けが必要</li>
</ul>
</li>
<li><p>datapath と network の連携</p></li>
<li><p>network_service 設定 ( 任意 )</p>

<ul>
<li>NFV</li>
</ul>
</li>
</ul>


<h1>Memo</h1>

<p>メッセージキューに ZeroMQ を使っている
Wakame-vdc だと RabbitMQ 使ってる</p>

<p>vnet-vna は Controller という名前のプロセスで動作している</p>

<h2>redis の警告の対策</h2>

<p>/var/log/redis/redis.log に下記のログが吐かれる</p>

<pre><code>[4271] 04 Feb 09:23:33 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
</code></pre>

<pre><code>echo "vm.overcommit_memory = 1" &gt;&gt; /etc/sysctl.conf
sysctl -p
</code></pre>

<h2>:vdc_vnet_plugin</h2>

<p>/etc/openvnet/vnmgr.conf の <code>plugins [:vdc_vnet_plugin]</code> は wakame-vdc との連携をさせる際に必要</p>

<h1>参照 URL</h1>

<ul>
<li><a href="https://github.com/axsh/openvnet/blob/master/docs/InstallGuide.md">InstallGuide</a></li>
<li><a href="http://giraffeforestg.blog.fc2.com/blog-entry-184.html">OpenVNetのインストールに挑戦(2)</a></li>
<li><a href="http://qiita.com/akry/items/20125d908fb94fc30871">VagrantをつかってOpenVNetを触ってみよう</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Openvswitch で Bonding]]></title>
    <link href="http://ryoogata.github.io/2015/02/20/openvswitch/"/>
    <updated>2015-02-20T11:57:54+09:00</updated>
    <id>http://ryoogata.github.io/2015/02/20/openvswitch</id>
    <content type="html"><![CDATA[<h1>目的</h1>

<p>OpenvSwithc 環境下で bonding を設定する</p>

<h1>設定</h1>

<pre><code># ovs-vsctl add-bond br0 bond0 eth0 eth1
</code></pre>

<p>※ 作成時に bond0 が存在しているとエラーになる</p>

<pre><code># ovs-vsctl show
49f85a35-e17c-4165-9bf9-e8476698908e
    Bridge "br0"
        Port "br0"
            Interface "br0"
                type: internal
        Port "bond0"
            Interface "eth0"
            Interface "eth1"
    ovs_version: "2.1.3"
</code></pre>

<p>eth0 を固定で slave, eth1 を backup slave みたく固定で設定する方法がよくわからない&hellip;</p>

<h1>Memo</h1>

<h2>bond 設定確認コマンド</h2>

<pre><code># ovs-appctl bond/show bond0

---- bond0 ----
bond_mode: active-backup
bond-hash-basis: 0
updelay: 0 ms
downdelay: 0 ms
lacp_status: off

slave eth0: disabled
    may_enable: false

slave eth1: disabled
    may_enable: false
</code></pre>

<h2>bond 状態確認コマンド</h2>

<pre><code># ovs-vsctl list port bond0

_uuid               : 79edb982-fe2a-4dfb-a078-38465aff870a
bond_downdelay      : 0
bond_fake_iface     : false
bond_mode           : []
bond_updelay        : 0
external_ids        : {}
fake_bridge         : false
interfaces          : [967407dc-f13f-4fa1-a9f7-fe720bb49512, 9e5e6bce-3d45-48ea-96b6-09017c517aa5]
lacp                : []
mac                 : []
name                : "bond0"
other_config        : {}
qos                 : []
statistics          : {}
status              : {}
tag                 : []
trunks              : []
vlan_mode           : []
</code></pre>

<h2>port の削除</h2>

<pre><code># ovs-vsctl del-port 0
</code></pre>

<h2>man ページ</h2>

<pre><code># man 5 ovs-vswitchd.conf.db
</code></pre>

<h2>雑記</h2>

<pre><code># ovs-vsctl add-bond br0 bond0 eth1 eth2 bond_mode=balance-slb other_config:bond-detect-mode=miimon other_config:bond-miimon-interval=100 other_config:trunks=1,2,3,4,5,8,12,13,10,11 other_config:bond_updelay=100 other_config:lacp-time=fast

# ovs-vsctl set interface eth1 other-config:enable-vlan-splinters=true

# ovs-vsctl set interface eth2 other-config:enable-vlan-splinters=true
</code></pre>

<pre><code># network interface settings
auto lo
iface lo inet loopback


auto eth1
iface eth1 inet manual


auto eth0
iface eth0 inet manual


allow-vmbr1 bond0
iface bond0 inet manual
        ovs_type OVSBond
        ovs_bridge vmbr1
        ovs_bonds eth0 eth1
        ovs_options bond_mode=active-backup




auto vmbr1
iface vmbr1 inet static
        address  192.168.0.22
        netmask  255.255.255.0
        gateway  192.168.0.1
        ovs_type OVSBridge
        ovs_ports bond0
</code></pre>

<h1>参照 URL</h1>

<ul>
<li><a href="http://sa3g.blogspot.jp/2011/03/ubuntu1010open-vswitch11bonding.html">Ubuntu10.10、Open vSwitch(1.1)でBonding</a></li>
<li><a href="http://linuxdrops.com/install-and-configure-open-vswitch-on-centos-rhel-fedora/">Install And Configure Open VSwitch On CentOS RHEL Fedora</a></li>
<li><a href="http://blog.scottlowe.org/2012/10/19/link-aggregation-and-lacp-with-open-vswitch/">Link Aggregation and LACP with Open vSwitch</a></li>
<li><a href="http://forum.proxmox.com/threads/18429-OpenvSwitch-setup">OpenvSwitch setup</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Openvswitch のインストールと初期セットアップ]]></title>
    <link href="http://ryoogata.github.io/2015/02/19/openvswitch/"/>
    <updated>2015-02-19T23:58:33+09:00</updated>
    <id>http://ryoogata.github.io/2015/02/19/openvswitch</id>
    <content type="html"><![CDATA[<h1>yum 経由のインストール</h1>

<h2>レポジトリの追加</h2>

<pre><code># yum install http://rdo.fedorapeople.org/openstack-icehouse/rdo-release-icehouse.rpm

openvswitch x86_64 2.1.2-1.el6 openstack-icehouse 2.2 M
</code></pre>

<h2>パッケージのインストール</h2>

<pre><code># yum install openvswitch
</code></pre>

<h2>bridge kernel module の削除</h2>

<pre><code># /sbin/rmmod bridge
</code></pre>

<h2>blacklist.conf への追加</h2>

<p>kernel module の bridge をロードしてほしくないので、/etc/modprobe.d/blacklist.conf に記述</p>

<pre><code>install bridge /bin/false
</code></pre>

<h2>Service の起動</h2>

<pre><code># service openvswitch start
</code></pre>

<h2>interface の設定</h2>

<h3>ifcfg-br0</h3>

<pre><code>DEVICE=br0
ONBOOT=yes
DEVICETYPE=ovs
TYPE=OVSBridge
BOOTPROTO=static
IPADDR=A.B.C.D
NETMASK=X.Y.Z.0
HOTPLUG=no
</code></pre>

<h3>ifcfg-eth1</h3>

<pre><code>DEVICE=eth1
DEVICETYPE=ovs
HWADDR=40:A8:F0:39:96:A9
TYPE=OVSPort
UUID=22ff31c5-1d59-478d-8fa4-55f2984a94d8
ONBOOT=yes
NM_CONTROLLED=no
BRIDGE=br0
</code></pre>

<h1>Tips</h1>

<h2>bridge kernel module の追加方法</h2>

<pre><code># insmod /lib/modules/2.6.32-504.el6.x86_64/kernel/net/bridge/bridge.ko
</code></pre>

<h2>bridge kernel module の削除方法</h2>

<pre><code>/sbin/rmmod bridge
</code></pre>

<h2>br0 の作成と eth0 の追加</h2>

<pre><code># ovs-vsctl add-br br0
# ovs-vsctl add-port br0 eth0
</code></pre>

<h1>Memo</h1>

<p>yum install <a href="http://rdo.fedorapeople.org/rdo-release.rpm">http://rdo.fedorapeople.org/rdo-release.rpm</a> <br/>
↑これはダメ。レポジトリ先が存在していない…</p>

<p>yum erase rdo-release で削除</p>

<h1>参照 URL</h1>

<ul>
<li><a href="http://qunisaki.blog.fc2.com/blog-entry-6.html">CentOS 6.4 で openvswitch を使ってみる</a></li>
<li><a href="http://blog.hirokikana.com/?p=533">Open vSwitchとRyuを使った最も単純なOpenFlowネットワークの構築</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Kernel_modules_%28%E6%97%A5%E6%9C%AC%E8%AA%9E%29">Kernel modules (日本語)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Iptables を利用した NAT Router]]></title>
    <link href="http://ryoogata.github.io/2015/02/19/nat/"/>
    <updated>2015-02-19T23:43:56+09:00</updated>
    <id>http://ryoogata.github.io/2015/02/19/nat</id>
    <content type="html"><![CDATA[<h1>NAT 設定追加</h1>

<h2>内部から外部への通信を NAT する設定</h2>

<p>例: 内部 IP アドレスレンジ ( 10.1.0.0/24 ) から外部への通信を NAT する</p>

<pre><code># iptables -t nat -F
# iptables -t nat -A POSTROUTING -s 10.1.0.0/24 -j MASQUERADE
</code></pre>

<h2>外部から内部への通信を NAT する設定</h2>

<pre><code># iptables -t nat -I PREROUTING -d 172.16.1.36 -p tcp -m tcp --dport 1022 -j DNAT --to-destination "10.1.0.10:2442"
# iptables -t nat -I PREROUTING -d 172.16.1.36 -p tcp -m tcp --dport 1122 -j DNAT --to-destination "10.1.0.11:2442"
# iptables -t nat -I PREROUTING -d 172.16.1.36 -p tcp -m tcp --dport 1222 -j DNAT --to-destination "10.1.0.12:2442"
# iptables -t nat -I PREROUTING -d 172.16.1.36 -p tcp -m tcp --dport 1322 -j DNAT --to-destination "10.1.0.13:2442"
# iptables -t nat -I PREROUTING -d 172.16.1.36 -p tcp -m tcp --dport 1422 -j DNAT --to-destination "10.1.0.14:2442"
# iptables -t nat -I PREROUTING -d 172.16.1.36 -p tcp -m tcp --dport 1080 -j DNAT --to-destination "10.1.0.10:80"
</code></pre>

<h1>NAT 設定削除方法</h1>

<h2>1. 行番号確認</h2>

<pre><code># iptables -t nat -L --line-numbers
</code></pre>

<h2>2. 行数を指定して削除</h2>

<pre><code># iptables -t nat -D PREROUTING 3
</code></pre>

<h1>iptable 設定保存</h1>

<pre><code># service iptables save
</code></pre>

<p>/etc/sysconfig/iptables に保存される</p>

<h1>パケットフォワード設定</h1>

<h2>net.ipv4.ip_forward の設定</h2>

<pre><code># sysctl -w net.ipv4.ip_forward=1
</code></pre>

<h2>設定の保存</h2>

<p>/etc/sysctl.conf に下記の記述を追加</p>

<pre><code>net.ipv4.ip_forward=1
</code></pre>

<h1>参照 URL</h1>

<ul>
<li><a href="http://aidemoire.hatenablog.com/entry/2013/10/04/184507">LinuxでNATルータを構成するメモ</a></li>
<li><a href="http://d.hatena.ne.jp/nosa1/20120313/1331618377">ipTablesのルールの削除</a></li>
<li><a href="http://safe-linux.homeip.net/network/Gateway_Server-06.html">IPv4 フォワーディングを有効にするには</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
